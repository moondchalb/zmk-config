/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define FUN_NUM 1
#define SYM_ARR 2
#define PRF_FBT 3

#define EUR RA(RS(N2))
#define CM COMMA

#define SHTAB LS(TAB)      // shift tab
#define NTAB LG(LS(RBKT))  // next tab
#define PTAB LG(LS(LBKT))  // previous tab
#define NWIN LG(GRAVE)     // next window of app
#define PWIN LG(LS(GRAVE)) // previous window of app

#define SPCL LG(LA(LEFT))  // Spectacle left
#define SPCR LG(LA(RIGHT)) // Spectacle right
#define SPCF LG(LA(F))     // Spectacle full screen


/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  ESC    |  Q  |  W  |  E  |  R  |  T  |                                            |  Y  |  U  |  I   |  O    |  P     | BSPC |
// |  TAB    |  A  |  S  |  D  |  F  |  G  |                                            |  H  |  J  |  K   |  L    |  ;     |  '   |
// |  SHFT   |  Z  |  X  |  C  |  V  |  B  |      | BSPC |              |  CTRL  |      |  N  |  M  |  ,   |  .    |  /     | SHFT |
//                   | ALT | CMD | FUN_NUM | ENTER |SPACE|              | FUN_NUM | SYM_ARR | SPACE | ENTER | ALT |
			bindings = <
	&kp ESC   &kp Q &kp W &kp E &kp R &kp T                                              &kp Y &kp U &kp I  &kp O   &kp P    &kp BSPC
	&kp TAB   &kp A &kp S &kp D &kp F &kp G                                              &kp H &kp J &kp K  &kp L   &kp SEMI &kp SQT
	&kp LSHFT &kp Z &kp X &kp C &kp V &kp B    &none     &kp BSPC        &kp RCTRL &none &kp N &kp M &kp CM &kp DOT &kp FSLH &kp RSHFT
	               &kp LALT &kp LCMD &mo FUN_NUM &kp RET &kp SPACE       &mo FUN_NUM &mo SYM_ARR &kp SPACE &kp RET &kp RALT
			>;
		};

		// FUNCTION AND NUMPAD LAYER
		fun_num_layer {
// -----------------------------------------------------------------------------------------------------------------------------------------------------------
// | Brightness+|    Vol+    |  TabL  | Enter  |  TabR    | CMD+T |                                          |    _    |  7   |  8   |  9   |    +    | DEL  |
// | Brightness-|    Vol-    |  SpecL | SpecF  |  SpecR   | CMD+H |                                          |    =    |  4   |  5   |  6   |    -    |  ¨   |
// | SHFT       |    Mute    |  Prev  |  Play  |  Next    | CMD+M |     | BSPC  |               |  CMD  |    |    *    |  1   |  2   |  3   |    %    | SHFT |
//                                        | CTRL | ALT  | CMD | FUN_NUM |PRF_FBT|               | FUN_NUM | PRF_FBT |   0   |   .   | ALT |
			bindings = <
	&kp C_BRI_UP &kp C_VOL_UP &kp PTAB &kp RET  &kp NTAB   &kp LG(T)                                          &kp UNDER &kp N7 &kp N8 &kp N9 &kp MINUS &trans
	&kp C_BRI_DN &kp C_VOL_DN &kp SPCL &kp SPCF &kp SPCR   &kp LG(H)                                          &kp EQUAL &kp N4 &kp N5 &kp N6 &kp PLUS  &kp LA(U)
	&trans       &kp K_MUTE &kp C_PREV &kp C_PP &kp C_NEXT &kp LG(M) &trans &trans              &trans  &none &kp STAR  &kp N1 &kp N2 &kp N3 &kp PRCNT &trans
	                                       &trans   &trans   &trans  &trans &mo PRF_FBT         &trans  &mo PRF_FBT &kp N0   &kp DOT  &trans
			>;
		};

		// SYMBOL AND ARROW LAYER
		sym_arr_layer {
// -------------------------------------------------------------------------------------------------------------------------------------------------------
// |    `    |    !    |   @    |   {    |   }    |  ~   |                                            |  pgup   |  HOME  |   up   |   end   | --- | DEL  |
// |    |    |    #    |   $    |   (    |   )    |  €   |                                            | pgdown  |  left  |  down  |  right  | --- |extPwr|
// |   SHFT  |    ^    |   &    |   [    |   ]    |  \   |     | SPACE |               |  CMD  |      |  -----  |  ----  |  ----  | ------- | --- | SHFT |
//                                | CTRL | ALT  | CMD | FUN_NUM | BSPC |               | PRF_FBT | SYM_ARR | SPACE | ENTER | ALT |
			bindings = <
	&kp GRAVE &kp EXCL  &kp AT   &kp LBRC &kp RBRC &kp TILDE                                           &kp PG_UP &kp HOME &kp UP   &kp END   &none &kp DEL
	&kp PIPE  &kp HASH  &kp DLLR &kp LPAR &kp RPAR &kp EUR                                             &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &none &ext_power EP_TOG
	&trans    &kp CARET &kp AMPS &kp LBKT &kp RBKT &kp BSLH &none &trans                 &trans &none  &none     &none    &none    &none     &none &trans
	                           &trans   &trans   &trans  &trans   &trans                 &mo PRF_FBT &trans &trans &trans &trans
			>;
		};

		// PREFERENCES AND F-BUTTON LAYER
		prf_fbt_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------
// | BT clear | BT-Dev 0   | BT-Dev 1   | BT-Dev 2   | BT-Dev 3   | BT-Dev 4   |                                | ---- | ---- | ---- | ---- | ---- | ---- |
// | Power ON       | ---- | Power OFF       | ----  |    ----    |    ----    |                                | ---- | ---- | ---- | ---- | ---- | ---- |
// | Prefer USB |   ----   | Prefer BT       | ----  |    ----    |    ----    |     | ---- |      | ---- |     | ---- | ---- | ---- | ---- | ---- | ---- |
//                                                       | ---- | ---- | ---- | ---- | ---- |      | ---- | ---- | ---- | ---- | ---- |
			bindings = <
	&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                                  &trans &trans &trans &trans &trans &trans
	&ext_power EP_ON &trans &ext_power EP_OFF &trans  &trans       &trans                                        &trans &trans &trans &trans &trans &trans
	&out OUT_USB &trans     &out OUT_BLE      &trans  &trans       &trans       &none &trans        &trans &none &trans &trans &trans &trans &trans &trans
	                                                      &trans &trans &trans &trans &trans        &trans &trans &trans &trans &trans
			>;
		};

		// EMPTY LAYER (to be used as template for new layers)
		// note that layers containing only &trans (like the unmodified empty layer) result in a compiler error if used
// 		empty_layer {
// // ---------------------- -----------------------------------------------------------------------------------------------
// // | ---- | ---- | ---- | ---- | ---- | ---- |                                | ---- | ---- | ---- | ---- | ---- | ---- |
// // | ---- | ---- | ---- | ---- | ---- | ---- |                                | ---- | ---- | ---- | ---- | ---- | ---- |
// // | ---- | ---- | ---- | ---- | ---- | ---- |     | ---- |      | ---- |     | ---- | ---- | ---- | ---- | ---- | ---- |
// //                     | ---- | ---- | ---- | ---- | ---- |      | ---- | ---- | ---- | ---- | ---- |
// 			bindings = <
// 	&trans &trans &trans &trans &trans &trans                                  &trans &trans &trans &trans &trans &trans
// 	&trans &trans &trans &trans &trans &trans                                  &trans &trans &trans &trans &trans &trans
// 	&trans &trans &trans &trans &trans &trans &none &trans        &trans &none &trans &trans &trans &trans &trans &trans
// 	                    &trans &trans &trans &trans &trans        &trans &trans &trans &trans &trans
// 			>;
// 		};

	};
};
